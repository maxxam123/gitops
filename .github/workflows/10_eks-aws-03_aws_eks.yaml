on:
 push:
   branches:
   - main
   paths:
   - '01_infra/10_eks/aws/03_aws_eks/terraform.tfvars'

env:
 AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
 GITHUB: ${{ secrets.GITHUB }}

jobs:
 build:
   name: "test"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: 01_infra/10_eks/aws/03_aws_eks/
   steps:
     - name: test
       uses: actions/checkout@v3

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.0

     - name: Terraform init
       id: init
       run: |
         cp ../../../../02_tmp/10_eks/aws/03_main.tf .
         cp ../../../../02_tmp/10_eks/aws/02_variables.tf .
         mkdir iam
         cp -r ../../../../02_tmp/10_eks/aws/iam/* iam/
         
         pip install awscli
         aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
         aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
         aws configure set default.region "eu-central-1"
         
         curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
         chmod +x kubectl
         mkdir -p ~/.local/bin
         cp ./kubectl ~/.local/bin/kubectl
         
         curl -O https://get.helm.sh/helm-v3.16.2-linux-amd64.tar.gz
         tar xvf helm-v3.16.2-linux-amd64.tar.gz
         cp linux-amd64/helm /usr/local/bin
         
         aws eks update-kubeconfig --region eu-central-1 --name 03_aws_eks-prod-cluster
         
         ./kubectl create secret generic awssm-secret --from-literal=username=$AWS_ACCESS_KEY_ID --from-literal=password=$AWS_SECRET_ACCESS_KEY

         mkdir -p charts/argo-cd/charts
         cp -r ../../../../04_git/aws/10_eks/03_aws_eks/01_bootstrap/argo/charts/* charts/
         ls -la charts/argo-cd/
         ls -la charts/argo-cd/charts
         touch charts/argo-cd/.helmignore
         ./kubectl create ns argocd
         helm dep update charts/argo-cd/
           
         helm install argo-cd charts/argo-cd/ --namespace argocd

         ./kubectl apply -f 13_application.yaml

         cp 03-aws-eks-app.yaml ../../../../

     - name: Pushes applicationset file
       uses: dmnemec/copy_file_to_another_repo_action@main
       env:
         API_TOKEN_GITHUB: ${{ secrets.PLAT04 }}
       with:
         source_file: '03-aws-eks-app.yaml'
         destination_repo: 'maxxam123/upstream'
         destination_folder: 'apps'
         user_email: 'hennighausenmax@email.com'
         user_name: 'maxxam123'
         commit_message: 'A custom message for the commit'
     
        # terraform init -backend-config="bucket=dunhuang-gansu-terraform-state"
        # terraform plan -lock=false
        
         # ./kubectl create secret generic remote-repo --from-literal=type="git" --from-literal=url="https://github.com/maxxam123/upstream.git" --from-literal=username="maxxam123" --from-literal=password=$GITHUB -n argocd
         # ./kubectl -n argocd label secret remote-repo argocd.argoproj.io/secret-type=repository 

       #  https=$(cat ~/.kube/config | grep server | awk '{print $2}')
       #  echo $https
       #  httpss=$(cut -c9- <<< $https)
       #  echo $httpss

       #  sed -i -e "s/HTTPS/$httpss/g" 03-aws-eks-app.yaml
       #  ls -la
       #  cp 03-aws-eks-app.yaml ../../../../
       #  ls ../../../../

     # - name: Pushes applicationset file
     #   uses: dmnemec/copy_file_to_another_repo_action@main
     #   env:
     #     API_TOKEN_GITHUB: ${{ secrets.PLAT04 }}
     #   with:
     #     source_file: '03-aws-eks-app.yaml'
     #     destination_repo: 'maxxam123/upstream'
     #     destination_folder: 'apps'
     #     user_email: 'hennighausenmax@email.com'
     #     user_name: 'maxxam123'
     #     commit_message: 'A custom message for the commit'
         

     # - name: Terraform Plan
     #   run: terraform plan -lock=false

     #- name: Terraform Apply
     #  run: terraform apply -auto-approve -input=false -lock=false

     # cp ../../../../02_tmp/10_eks/aws/08_autoscaler.tf .
     # cp ../../../../02_tmp/10_eks/aws/09_efs.tf .
     # cp ../../../../02_tmp/10_eks/aws/10_secdriver.tf .
